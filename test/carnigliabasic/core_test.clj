(ns carnigliabasic.core-test
  #_{:clj-kondo/ignore [:refer-all]}
  (:require [clojure.test :refer :all]
            [carnigliabasic.core :refer :all]))

(deftest palabra-reservada?-test
  (testing "palabra-reservada?"
    (is (false? (palabra-reservada? 'SPACE)))
    (is (true? (palabra-reservada? 'ENV)))
    (is (true? (palabra-reservada? 'LOAD)))
    (is (true? (palabra-reservada? 'SAVE)))
    (is (true? (palabra-reservada? 'RUN)))
    (is (true? (palabra-reservada? 'EXIT)))
    (is (true? (palabra-reservada? 'INPUT)))
    (is (true? (palabra-reservada? 'PRINT)))
    (is (true? (palabra-reservada? '?)))
    (is (true? (palabra-reservada? 'DATA)))
    (is (true? (palabra-reservada? 'READ)))
    (is (true? (palabra-reservada? 'REM)))
    (is (true? (palabra-reservada? 'RESTORE)))
    (is (true? (palabra-reservada? 'CLEAR)))
    (is (true? (palabra-reservada? 'LET)))
    (is (true? (palabra-reservada? 'LIST)))
    (is (true? (palabra-reservada? 'NEW)))
    (is (true? (palabra-reservada? 'END)))
    (is (true? (palabra-reservada? 'FOR)))
    (is (true? (palabra-reservada? 'TO)))
    (is (true? (palabra-reservada? 'NEXT)))
    (is (true? (palabra-reservada? 'STEP)))
    (is (true? (palabra-reservada? 'GOSUB)))
    (is (true? (palabra-reservada? 'RETURN)))
    (is (true? (palabra-reservada? 'GOTO)))
    (is (true? (palabra-reservada? 'IF)))
    (is (true? (palabra-reservada? 'THEN)))
    (is (true? (palabra-reservada? 'ON)))
    (is (true? (palabra-reservada? 'ATN)))
    (is (true? (palabra-reservada? 'INT)))
    (is (true? (palabra-reservada? 'SIN)))
    (is (true? (palabra-reservada? 'EXP)))
    (is (true? (palabra-reservada? 'LOG)))
    (is (true? (palabra-reservada? 'LEN)))
    (is (true? (palabra-reservada? 'MID$)))
    (is (true? (palabra-reservada? 'ASC)))
    (is (true? (palabra-reservada? 'CHR$)))
    (is (true? (palabra-reservada? 'STR$)))
    (is (true? (palabra-reservada? '+)))
    (is (true? (palabra-reservada? '-)))
    (is (true? (palabra-reservada? '*)))
    (is (true? (palabra-reservada? '/)))
    (is (true? (palabra-reservada? '=)))
    (is (true? (palabra-reservada? '<>)))
    (is (true? (palabra-reservada? '<)))
    (is (true? (palabra-reservada? '<=)))
    (is (true? (palabra-reservada? '>)))
    (is (true? (palabra-reservada? '>=)))
    (is (true? (palabra-reservada? 'AND)))
    (is (true? (palabra-reservada? 'OR)))
    )
)

(deftest operador?-test
  (testing "operador?"
    (is (true? (operador? '+)))
    (is (true? (operador? (symbol "+"))))
    (is (true? (operador? '-)))
    (is (true? (operador? '* ) ))
    (is (true? (operador? '/)))
    (is (true? (operador? '=)))
    (is (true? (operador? '<>)))
    (is (true? (operador? '<)))
    (is (true? (operador? '<=)))
    (is (true? (operador? '>)))
    (is (true? (operador? '>=)))
    (is (false? (operador? '%)))))

(deftest anular-invalidos-test
      (testing "anular-invalidos"
        (is (= (anular-invalidos '(IF X & * Y < 12 THEN LET ! X = 0)) '(IF X nil * Y < 12 THEN LET nil X = 0)))))

((deftest expandir-nexts-test
      (testing "expandir-nexts"
        (def n (list '(PRINT 1) (list 'NEXT 'A (symbol ",") 'B)))
        (def result (list '(PRINT 1) (list 'NEXT 'A) (list 'NEXT 'B)))
        (is (= (expandir-nexts n) result ))
      )
   ) 

 )